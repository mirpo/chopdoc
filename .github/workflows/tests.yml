name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-n-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        go-version: ["1.23"]

    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install dependencies
        run: make install

      - name: golangci-lint
        if: runner.os != 'Windows'
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.2
          args: --verbose

      - name: Run tests
        run: make test

      - name: Build
        run: make build

      - name: Execute
        if: runner.os != 'Windows'
        run: |
          time ./chopdoc -input ./tests/pg_essay.txt -output chunks.jsonl -size 100 -overlap 50

      - name: Execute
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          $time = Measure-Command {
            ./chopdoc -input ./tests/pg_essay.txt -output chunks.jsonl -size 100 -overlap 50
          }
          Write-Host "Execution Time: $($time.TotalSeconds) seconds"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        working-directory: ./tests
        run: uv python install

      - name: Compare results
        shell: bash
        run: make compare-recursive

      - name: Run piped
        shell: bash
        run: make pipe
